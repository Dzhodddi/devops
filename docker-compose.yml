services:
  db:
    image: postgres:16
    env_file:
      - ./.env
    ports:
      - "5432:5432"

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - db

    env_file:
      - ./.env
    volumes:
      - ./web-src/public:/app/public
    ports:
      - "3000:3000"

  frontend:
    build:
      context: ./web-src
      dockerfile: Dockerfile
    depends_on:
      - app
    #volumes:
    #  - ./web-src:/app
    ports:
      - "5173:5173"


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "8080:8080"
    networks:
      - monitoring

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: postgres://postgres:postgres@db:5432/devops?sslmode=disable
    command: >
      - --collector.statements

    networks:
      - monitoring

networks:
  monitoring:
